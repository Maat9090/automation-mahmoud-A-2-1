'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.config = config;
var dotenv = require('dotenv');

// mimic dotenv-rails file hierarchy
// https://github.com/bkeepers/dotenv#what-other-env-files-can-i-use
function config() {
  var _process$env = process.env,
      env = _process$env.NODE_ENV,
      disable = _process$env.PERCY_DISABLE_DOTENV;

  // don't load dotenv files when disabled

  if (disable) return;

  var paths = [env && '.env.' + env + '.local',
  // .env.local is not loaded in test environments
  env === 'test' ? null : '.env.local', env && '.env.' + env, '.env'].filter(Boolean);

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = paths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var path = _step.value;

      dotenv.config({ path: path });
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}